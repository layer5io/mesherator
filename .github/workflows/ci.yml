name: meshery-operator
on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
    tags:
      - v*
    branches:
      - master

jobs:
  golangci-lint:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.32

          # Optional: golangci-lint command line arguments.
          args: --skip-dirs-use-default=true

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true
  build:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Cache go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Build operator
      run: |
        go clean -modcache
        make all
  test:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Cache go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Test
      run: |
        chmod +x ./scripts/setup-ci.sh
        ls -l ./scripts/setup-ci.sh
        sh ./scripts/setup-ci.sh
        go clean -modcache
        make test
  docker-test:
    name: Docker build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Docker edge build & tag
        if: startsWith(github.ref, 'refs/tags/') != true && success()
        run: |
          make docker-build